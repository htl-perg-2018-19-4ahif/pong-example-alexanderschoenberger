{"version":3,"sources":["../src/server/app.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["import express = require('express');\r\nimport http = require('http');\r\nimport path = require('path');\r\nimport sio = require('socket.io');\r\nimport ball = require('./ball');\r\n\r\n\r\nconst app = express();\r\napp.use(express.json());\r\napp.use(express.static(path.join(path.dirname(__dirname), 'client')));\r\nconst server = http.createServer(app);\r\n\r\ninterface IPlayer {\r\n  name: string;\r\n  score: number;\r\n}\r\nlet players: IPlayer[] = [];\r\n\r\nlet gameRounds: number;\r\n\r\nconst port = process.env.PORT || 8090;\r\nserver.listen(port, () => console.log(`Server is listening on port ${port}...`));\r\nlet socket = sio(server);\r\n\r\nexport function sendLeftPoints(num:number) {\r\n  players[0].score = num;\r\n  if(num >= gameRounds){\r\n    socket.emit('gameover', players);\r\n    socket.emit('leftPoint', 0);\r\n    return false;\r\n  }\r\n  socket.emit('leftPoint', num);\r\n  return true;\r\n}\r\n\r\nexport function sendRightPoints(num:number) {\r\n  players[1].score = num;\r\n  if(num >= gameRounds){\r\n    socket.emit('gameover', players);\r\n    socket.emit('rightPoint', 0);\r\n    socket.emit('leftPoint', 0);\r\n    return false;\r\n  }\r\n  socket.emit('rightPoint', num);\r\n  return true;\r\n}\r\n\r\nexport function sendBallPosition(x:number, y:number){\r\n  socket.emit('ball',x, y);\r\n}\r\n\r\n// Handle the connection of new websocket clients\r\nsocket.on('connection', (socket) => {\r\n  socket.on('login', function (newUserName) {\r\n    let player: IPlayer = newUserName;\r\n    if (players.length < 2) {\r\n      players.push(player);\r\n      socket.emit('login success', players.length);\r\n    }\r\n    socket.on('disconnect', function() {\r\n      console.log('Got disconnect!');\r\n      players.pop();\r\n    });\r\n  });\r\n\r\n  socket.on('start game', function (clientHeight, clientWidth, ballHeight, ballWidth, paddleWidth: number, paddleHeight: number, paddleLeft:number, rounds: number) {\r\n    if (players.length === 2) {\r\n      gameRounds = rounds;\r\n      socket.emit('game started');\r\n      socket.broadcast.emit('game started');\r\n      ball.ballFunction(clientHeight, clientWidth, ballHeight, ballWidth, paddleWidth, paddleHeight, paddleLeft);\r\n    }\r\n  });\r\n\r\n\r\n  // Handle an ArrowKey event\r\n  socket.on('ArrowKey', function (code, name) {\r\n   if(players[0].name == name){\r\n      ball.setLeftPaddle(code);\r\n    }else{\r\n      ball.setRightPaddle(code);\r\n    };\r\n    // Broadcast the event to all connected clients except the sender\r\n    socket.broadcast.emit('ArrowKey', code);\r\n  });\r\n\r\n});\r\n"]}